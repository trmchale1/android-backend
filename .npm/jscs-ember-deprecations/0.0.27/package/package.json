{"name":"jscs-ember-deprecations","version":"0.0.27","description":"Ember deprecation warnings for JSCS","homepage":"https://github.com/minichate/jscs-ember-deprecations","author":{"name":"Christopher Troup"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/minichate/jscs-ember-deprecations.git"},"bugs":{"url":"https://github.com/minichate/jscs-ember-deprecations/issues","email":"minichate@gmail.com"},"main":"lib/index","scripts":{"lint":"jshint lib test && jscs lib test","test":"npm run lint && mocha","coverage":"istanbul cover _mocha && cat ./coverage/lcov.info","coveralls":"npm run coverage | coveralls","travis":"npm run test && npm run coveralls"},"dependencies":{"cst":"^0.3.0"},"devDependencies":{"chai":"^3.4.1","chai-subset":"^1.2.2","coveralls":"^2.11.4","fixture-loader":"^0.2.4","istanbul":"^0.4.0","jscs":"^3.0.4","jshint":"^2.7.0","merge":"^1.2.0","mocha":"^2.3.4","mocha-lcov-reporter":"^1.0.0"},"keywords":["ember","jscs"],"engines":{"node":">= 0.10.0"},"contributors":[{"name":"Christopher Troup","email":"minichate@gmail.com","url":"https://minichate.github.io/"}],"gitHead":"57496156fd4726089929aba41f6d481365140645","readme":"# jscs-ember-deprecations\n\n[![Build Status](https://travis-ci.org/minichate/jscs-ember-deprecations.svg?branch=master)](https://travis-ci.org/minichate/jscs-ember-deprecations)\n[![Dependency Status](https://david-dm.org/minichate/jscs-ember-deprecations.svg)](https://david-dm.org/minichate/jscs-ember-deprecations)\n[![devDependency Status](https://david-dm.org/minichate/jscs-ember-deprecations/dev-status.svg)](https://david-dm.org/minichate/jscs-ember-deprecations#info=devDependencies)\n[![Coverage Status](https://coveralls.io/repos/minichate/jscs-ember-deprecations/badge.svg?branch=master&service=github)](https://coveralls.io/github/minichate/jscs-ember-deprecations?branch=master)\n\nThis is a JSCS plugin to include errors for features that are deprecated in Ember.js\n\n## Installation\n\n```bash\nnpm install jscs-ember-deprecations --save-dev\n```\n\nYou'll also need to tell JSCS to load the plugin. Modify your `.jscsrc` file to include\n\n```json\n\"plugins\": [\n  \"jscs-ember-deprecations\"\n],\n\"disallowObjectController\": true,\n\"disallowInstanceInInitializer\": true,\n\"disallowPrototypeExtension\": true,\n\"disallowAtEachLeafNode\": true,\n// ...\n```\n\nIf you invoke JSCS with `--fix` (see http://jscs.info/overview#cli) some deprecation errors can be fixed automatically.\n\nSee [Supported deprecations](#supported-deprecations) for valid keys\n\n## Why\n\nMigrating to a newer Ember version can be tricky if you haven't already gone back and removed all uses of deprecated features. Instead, this plugin intends to enable a migration path in a codebase, where developers can be warned when they use deprecated features.\n\nA sample use case is to:\n\n- Use a tool like [Lint Review](https://github.com/markstory/lint-review) to automagically annotate pull requests. Developers will be warned if they're using a feature that is deprecated. Put these \"aspirational\" rules in `.toolbot_jscsrc`\n- Use `broccoli-jscs` so that JSCS gets run at the same time you're running unit tests. Put rules that are \"mandatory\" in your codebase's `.jscsrc`. Any violations of those rules will result in the test suite failing.\n\nThis way a codebase can be gradually brought into compliance over time.\n\n## Supported deprecations\n\n### Deprecations added in Ember 1.11\n\n- `disallowObjectController` will warn you if you use the deprecated `Ember.ObjectController`. See http://emberjs.com/deprecations/v1.x/#toc_objectcontroller for details.\n\n- `disallowInstanceInInitializer` will warn you if you are looking up instances within an initializer. See http://emberjs.com/deprecations/v1.x/#toc_access-to-instances-in-initializers for details.\n\n### Deprecations added in Ember 1.12\n\n- `disallowCoreView` will warn you if you use the deprecated `Ember.CoreView`. See https://github.com/emberjs/ember.js/pull/10585 for details.\n\n- `disallowEmberTryCatch` will warn you if you use the deprecated `Ember.tryCatch` or `Ember.tryCatchFinally` helpers. See https://github.com/emberjs/ember.js/pull/10667 for details.\n\n- `disallowEmberRequired` will warn you if you use the deprecated `Ember.required()` helper. See https://github.com/emberjs/ember.js/pull/10668 for details.\n\n- `disallowDualGetterSetter` will warn you if you use a dual setter/getter function argument to `Ember.computed()`. See http://emberjs.com/deprecations/v1.x/#toc_computed-properties-with-a-shared-getter-and-setter for details.\n\n### Deprecations added in Ember 1.13\n\n- `disallowAtEachLeafNode` will warn you if you use the deprecated `foo.@each` notation. See https://github.com/emberjs/ember.js/pull/11994 for details.\n\n- `disallowArrayComputed` will warn you if you use the deprecated `Ember.ArrayComputedProperty` or `Ember.arrayComputed()`. See https://github.com/emberjs/ember.js/pull/11403 for details.\n\n- `disallowReduceComputed` will warn you if you use the deprecated `Ember.ReduceComputedProperty` or `Ember.reduceComputed()`. See https://github.com/emberjs/ember.js/pull/11403 for details.\n\n- `disallowEmberCreate` will warn you if you use the deprecated `Ember.create()` function. See http://emberjs.com/deprecations/v1.x/#toc_ember-create for details.\n\n- `disallowEmberKeys` will warn you if you use the deprecated `Ember.keys()` function. See http://emberjs.com/deprecations/v1.x/#toc_ember-keys for details.\n\n- `disallowEmberOneway` will warn you if you use the deprecated `Ember.oneWay()` function. See http://emberjs.com/deprecations/v1.x/#toc_ember-oneway for details.\n\n- `disallowEmberView` will warn you if you use the deprecated `Ember.View`, `Ember.LinkView`, `Ember.Select`, `Ember.ContainerView`, or `Ember.CollectionView` classes. See http://emberjs.com/deprecations/v1.x/#toc_ember-view for details.\n\n- `disallowPositionalParamsExtend` will warn you if you use `positionalParams`\nwithin `.extend()` instead of setting it as a static property on the class\nitself. See http://emberjs.com/deprecations/v1.x/#toc_set-code-positionalparams-code-as-a-static-property-on-the-class for details.\n\n- `disallowBeforeObserver` will warn you if you use the deprecated `Ember.addBeforeObserver()`, `Ember.removeBeforeObserver()`, or `Ember.beforeObserversFor()` functions. Additionally, it will warn you if you use the deprecated `.observesBefore()` prototype extenion. Note that `.observesBefore()` is also deprecated in [disallowPrototypeExtension](#other-ember-best-practices). See http://emberjs.com/deprecations/v1.x/#toc_beforeobserver for details.\n\n- `disallowImmediateObserver` will warn you if you use the deprecated `Ember.immediateObserver` helper. See http://emberjs.com/deprecations/v1.x/#toc_ember-immediateobserver for details.\n\n- `disallowArrayController` will warn you if you use the deprecated `Ember.ArrayController`. See http://emberjs.com/deprecations/v1.x/#toc_arraycontroller for details.\n\n- `disallowControllerNeeds` will warn you if you're doing dependency injection via the `needs` property on a controller. See http://emberjs.com/deprecations/v1.x/#toc_controller-needs for details.\n\n- `disallowFreezableMixin` will warn you if you use the deprecated `Ember.Freezable` mixin. See http://emberjs.com/deprecations/v1.x/#toc_ember-freezeable for details.\n\n- `disallowObserverArgumentOrdering` requires that `Ember.observer()` takes callable argument as the final argument. See http://emberjs.com/deprecations/v1.x/#toc_reversed-ember-observer-arguments for details.\n\n- `disallowCreateWithMixins` will warn you if you use the deprecated `Ember.Object.createWithMixins` method. See http://emberjs.com/deprecations/v1.x/#toc_ember-createwithmixins for details.\n\n- `disallowComputedAny` will warn you if you use the deprecated `Ember.computed.any()` helper. See http://emberjs.com/deprecations/v1.x/#toc_ember-computed-any for details.\n\n- `disallowHandlebarsHelpers` will warn you if you use the deprecated `Ember.HTMLBars.makeBoundHelper()` or `Ember.Handlebars.registerHelper()` helpers. See http://emberjs.com/deprecations/v1.x/#toc_handlebars-htmlbars-helpers for details.\n\n### Deprecations added in Ember 2.0\n\nNone. Ember 2.0 removed support for the above deprecations.\n\n### Deprecations added in Ember 2.1\n\n- `disallowInitializerArity` will warn you if you have more than 1 argument to an initializer. See http://emberjs.com/deprecations/v2.x/#toc_initializer-arity for details.\n\n- `disallowPrivateRegistryProperty` will warn you if you use one of the private `app.registry.*` deprecations. See http://emberjs.com/deprecations/v2.x/#toc_ember-application-registry-ember-applicationinstance-registry for details.\n\n- `disallowAppInstanceContainer` will warn you if you use the private `app.container.lookup()` depreprecation in an initializer. See http://emberjs.com/deprecations/v2.x/#toc_ember-applicationinstance-container for details.\n\n- `disallowDebugMissingArguments` will warn you if you use one of the `Ember.warn()`, `Ember.deprecate()`, `Ember.deprecateFunc()` or `Ember.computed.deprecatingAlias()` function without passing in an options object that at a minimum contains an `id` property. See http://emberjs.com/deprecations/v2.x/#toc_ember-debug-function-options for details.\n\n- `disallowDefaultLayout` will warn you if you use the `defaultLayout` property inside a Component. See http://emberjs.com/deprecations/v2.x/#toc_ember-component-defaultlayout for details.\n\n- `disallowCurrentState` will warn you if you use the private `currentState` or `_currentState` property inside a Component. See http://emberjs.com/deprecations/v2.x/#toc_ember-component-currentstate for details.\n\n### Other Ember best practices\n\n- `disallowPrototypeExtension` will warn you if you are using `.property()`, `.observes()` or `observesBefore()`. See http://guides.emberjs.com/v1.10.0/configuring-ember/disabling-prototype-extensions/#toc_functions for details.\n\n### Deprecations added in Ember 2.3\n\n- `disallowInjectedContainerAccess` will warn you if you are using the injected container (`this.container`). See http://emberjs.com/deprecations/v2.x/#toc_injected-container-access for details.\n\n# License\n\nThis library is lovingly brought to you by [@minichate](https://twitter.com/minichate). It is released under the MIT license.\n","readmeFilename":"README.md","_id":"jscs-ember-deprecations@0.0.27","_shasum":"e2df895375d3118af45823c168eace01abf92418","_from":"brzpegasus/jscs-ember-deprecations#5749615","_resolved":"git://github.com/brzpegasus/jscs-ember-deprecations.git#57496156fd4726089929aba41f6d481365140645"}