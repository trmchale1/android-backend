{"_id":"create-error","_rev":"9-feabefb2a09631322a2c0ffea836e491","name":"create-error","description":"Simple helper for sub-classing the Error object","dist-tags":{"latest":"0.3.1"},"versions":{"0.1.0":{"name":"create-error","version":"0.1.0","description":"Simple helper for sub-classing the Error object","main":"create-error.js","scripts":{"test":"mocha -R spec test/index.js"},"directories":{"test":"test"},"repository":{"type":"git","url":"https://github.com/tgriesser/create-error.git"},"keywords":["errors"],"author":{"name":"Tim Griesser","url":"https://github.com/tgriesser"},"license":"MIT","devDependencies":{"mocha":"~1.12.0"},"dependencies":{"lodash":">=2.0.0"},"readme":"create-error.js\n===============\n\nA simple helper for creating subclassed errors in Javascript.\n\n[![Build Status](https://travis-ci.org/tgriesser/create-error.png)](https://travis-ci.org/tgriesser/create-error)\n\n## Use:\n\n```bash\n$ npm   install create-error\n$ bower install create-error\n```\n\n```js\nvar createError    = require('create-error');\nvar MyCustomError  = createError('MyCustomError');\nvar SubCustomError = createError(MyCustomError, 'CoolSubError', {messages: []});\n\nvar sub = new SubCustomError('My Message');\n\nsub instanceof SubCustomError // true\nsub instanceof MyCustomError  // true\nsub instanceof Error          // true\n\nassert.deepEqual(sub.messages, []) // true\n```\n\n### createError(name, [properties])\n\nCreates a new error by specifying the name of the error to be created,\ntaking an optional hash of properties to be attached to the error class\nupon creation.\n\n### createError(Target, [name, [properties]])\n\nCreate a new error by specifying the `Target` error class we wish to inherit from,\nalong with an optional name and properties for the error. If the `name` is omitted,\nit will have the same name as the parent error.\n\n### Additional Notes:\n\nIn the browser, the function will be assigned to `window.createError`,\nand `createError.noConflict()` will restore the original `window.createError`\nif overwritten.\n\n### License\n\nMIT\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/tgriesser/create-error/issues"},"homepage":"https://github.com/tgriesser/create-error","_id":"create-error@0.1.0","dist":{"shasum":"b6f65d8facd486f166928d9df83ae2e8c353fcf6","tarball":"https://registry.npmjs.org/create-error/-/create-error-0.1.0.tgz"},"_from":".","_npmVersion":"1.3.15","_npmUser":{"name":"tgriesser","email":"tgriesser10@gmail.com"},"maintainers":[{"name":"tgriesser","email":"tgriesser10@gmail.com"}]},"0.2.1":{"name":"create-error","version":"0.2.1","description":"Simple helper for sub-classing the Error object","main":"create-error.js","scripts":{"test":"mocha -R spec test/index.js"},"directories":{"test":"test"},"repository":{"type":"git","url":"https://github.com/tgriesser/create-error.git"},"keywords":["errors"],"author":{"name":"Tim Griesser","url":"https://github.com/tgriesser"},"license":"MIT","devDependencies":{"mocha":"~1.15.0"},"readme":"create-error.js\n===============\n\nA simple helper for creating subclassed errors in Javascript.\n\n[![Build Status](https://travis-ci.org/tgriesser/create-error.png)](https://travis-ci.org/tgriesser/create-error)\n\n## Use:\n\n```bash\n$ npm   install create-error\n$ bower install create-error\n```\n\n```js\nvar createError    = require('create-error');\n\nvar MyCustomError  = createError('MyCustomError');\nvar SubCustomError = createError(MyCustomError, 'CoolSubError', {messages: []});\n\nvar sub = new SubCustomError('My Message');\n\nsub instanceof SubCustomError // true\nsub instanceof MyCustomError  // true\nsub instanceof Error          // true\n\nassert.deepEqual(sub.messages, []) // true\n```\n\n### createError(name, [properties])\n\nCreates a new error by specifying the name of the error to be created,\ntaking an optional hash of properties to be attached to the error class\nupon creation.\n\n### createError(Target, [name, [properties]])\n\nCreate a new error by specifying the `Target` error class we wish to inherit from,\nalong with an optional name and properties for the error. If the `name` is omitted,\nit will have the same name as the parent error.\n\n### Additional Notes:\n\nIn the browser, the function will be assigned to `window.createError`,\nand `createError.noConflict()` will restore the original `window.createError`\nif overwritten.\n\n### License\n\nMIT\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/tgriesser/create-error/issues"},"_id":"create-error@0.2.1","dist":{"shasum":"a5cdbdf85f3d4c51b24877e96f483666fc5bdb20","tarball":"https://registry.npmjs.org/create-error/-/create-error-0.2.1.tgz"},"_from":".","_npmVersion":"1.3.2","_npmUser":{"name":"tgriesser","email":"tgriesser10@gmail.com"},"maintainers":[{"name":"tgriesser","email":"tgriesser10@gmail.com"}]},"0.3.0":{"name":"create-error","version":"0.3.0","description":"Simple helper for sub-classing the Error object","main":"create-error.js","scripts":{"test":"mocha -R spec test/index.js"},"directories":{"test":"test"},"repository":{"type":"git","url":"https://github.com/tgriesser/create-error.git"},"keywords":["errors"],"author":{"name":"Tim Griesser","url":"https://github.com/tgriesser"},"license":"MIT","devDependencies":{"mocha":"~1.15.0"},"readme":"create-error.js\n===============\n\nA simple helper for creating subclassed errors in Javascript.\n\n[![Build Status](https://travis-ci.org/tgriesser/create-error.png)](https://travis-ci.org/tgriesser/create-error)\n\n## Use:\n\n```bash\n$ npm   install create-error\n$ bower install create-error\n```\n\n```js\nvar createError    = require('create-error');\n\nvar MyCustomError  = createError('MyCustomError');\nvar SubCustomError = createError(MyCustomError, 'CoolSubError', {messages: []});\n\nvar sub = new SubCustomError('My Message', {someVal: 'value'});\n\nsub instanceof SubCustomError // true\nsub instanceof MyCustomError  // true\nsub instanceof Error          // true\n\nassert.deepEqual(sub.messages, []) // true\nassert.equal(sub.someVal, 'value') // true\n```\n\n### createError(name, [properties])\n\nCreates a new error by specifying the name of the error to be created,\ntaking an optional hash of properties to be attached to the error class\nupon creation.\n\n### createError(Target, [name, [properties]])\n\nCreate a new error by specifying the `Target` error class we wish to inherit from,\nalong with an optional name and properties for the error. If the `name` is omitted,\nit will have the same name as the parent error.\n\n### Additional Notes:\n\nIn the browser, the function will be assigned to `window.createError`,\nand `createError.noConflict()` will restore the original `window.createError`\nif overwritten.\n\n### License\n\nMIT\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/tgriesser/create-error/issues"},"_id":"create-error@0.3.0","dist":{"shasum":"2c43b283fbeba9c1dcf239450a8932f63dea730b","tarball":"https://registry.npmjs.org/create-error/-/create-error-0.3.0.tgz"},"_from":".","_npmVersion":"1.3.2","_npmUser":{"name":"tgriesser","email":"tgriesser10@gmail.com"},"maintainers":[{"name":"tgriesser","email":"tgriesser10@gmail.com"}]},"0.3.1":{"name":"create-error","version":"0.3.1","description":"Simple helper for sub-classing the Error object","main":"create-error.js","scripts":{"test":"mocha -R spec test/index.js"},"directories":{"test":"test"},"repository":{"type":"git","url":"https://github.com/tgriesser/create-error.git"},"keywords":["errors"],"author":{"name":"Tim Griesser","url":"https://github.com/tgriesser"},"license":"MIT","devDependencies":{"mocha":"~1.15.0"},"readme":"create-error.js\n===============\n\nA simple helper for creating subclassed errors in Javascript.\n\n[![Build Status](https://travis-ci.org/tgriesser/create-error.png)](https://travis-ci.org/tgriesser/create-error)\n\n## Use:\n\n```bash\n$ npm   install create-error\n$ bower install create-error\n```\n\n```js\nvar createError    = require('create-error');\n\nvar MyCustomError  = createError('MyCustomError');\nvar SubCustomError = createError(MyCustomError, 'CoolSubError', {messages: []});\n\nvar sub = new SubCustomError('My Message', {someVal: 'value'});\n\nsub instanceof SubCustomError // true\nsub instanceof MyCustomError  // true\nsub instanceof Error          // true\n\nassert.deepEqual(sub.messages, []) // true\nassert.equal(sub.someVal, 'value') // true\n```\n\n### createError(name, [properties])\n\nCreates a new error by specifying the name of the error to be created,\ntaking an optional hash of properties to be attached to the error class\nupon creation.\n\n### createError(Target, [name, [properties]])\n\nCreate a new error by specifying the `Target` error class we wish to inherit from,\nalong with an optional name and properties for the error. If the `name` is omitted,\nit will have the same name as the parent error.\n\n### Additional Notes:\n\nIn the browser, the function will be assigned to `window.createError`,\nand `createError.noConflict()` will restore the original `window.createError`\nif overwritten.\n\n### License\n\nMIT\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/tgriesser/create-error/issues"},"_id":"create-error@0.3.1","dist":{"shasum":"69810245a629e654432bf04377360003a5351a23","tarball":"https://registry.npmjs.org/create-error/-/create-error-0.3.1.tgz"},"_from":".","_npmVersion":"1.3.2","_npmUser":{"name":"tgriesser","email":"tgriesser10@gmail.com"},"maintainers":[{"name":"tgriesser","email":"tgriesser10@gmail.com"}]}},"readme":"create-error.js\n===============\n\nA simple helper for creating subclassed errors in Javascript.\n\n[![Build Status](https://travis-ci.org/tgriesser/create-error.png)](https://travis-ci.org/tgriesser/create-error)\n\n## Use:\n\n```bash\n$ npm   install create-error\n$ bower install create-error\n```\n\n```js\nvar createError    = require('create-error');\nvar MyCustomError  = createError('MyCustomError');\nvar SubCustomError = createError(MyCustomError, 'CoolSubError', {messages: []});\n\nvar sub = new SubCustomError('My Message');\n\nsub instanceof SubCustomError // true\nsub instanceof MyCustomError  // true\nsub instanceof Error          // true\n\nassert.deepEqual(sub.messages, []) // true\n```\n\n### createError(name, [properties])\n\nCreates a new error by specifying the name of the error to be created,\ntaking an optional hash of properties to be attached to the error class\nupon creation.\n\n### createError(Target, [name, [properties]])\n\nCreate a new error by specifying the `Target` error class we wish to inherit from,\nalong with an optional name and properties for the error. If the `name` is omitted,\nit will have the same name as the parent error.\n\n### Additional Notes:\n\nIn the browser, the function will be assigned to `window.createError`,\nand `createError.noConflict()` will restore the original `window.createError`\nif overwritten.\n\n### License\n\nMIT\n","maintainers":[{"name":"tgriesser","email":"tgriesser10@gmail.com"}],"time":{"modified":"2013-12-19T21:06:18.752Z","created":"2013-12-03T22:50:47.579Z","0.1.0":"2013-12-03T22:50:50.065Z","0.2.1":"2013-12-11T21:30:39.501Z","0.3.0":"2013-12-17T03:09:09.011Z","0.3.1":"2013-12-19T21:06:18.752Z"},"author":{"name":"Tim Griesser","url":"https://github.com/tgriesser"},"repository":{"type":"git","url":"https://github.com/tgriesser/create-error.git"},"_attachments":{},"_etag":"\"2RC5L6OCA7A66H7B9TTUTCYGZ\""}